version: "3.8"
services:
  _db_0:
    image: mysql:8.0.11
    platform: linux/x86_64
    container_name: mysql_db_container_0
    restart: unless-stopped
    tty: true
    ports:
      - 33061:3306
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev_db_0
      SERVICE_NAME: _db_0
    volumes:
      - ./docker/mysql/mysql.cnf:/etc/mysql/conf.d/
      - ./data_mysql:/var/lib/mysql
    networks:
      - app-network_0

  _pma_0:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    depends_on:
      - _db_0
    ports:
      - 9999:80
    tty: true
    container_name: pma_view_db_0
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: _db_0
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_DB: ${DB_DATABASE}
      PMA_ROOT_PASSWORD: ${DB_ROOT_PASS}
      PMA_PORT: 3306
      SERVICE_TAGS: dev_phpmyadmin
      SERVICE_NAME: _pma_0
    networks:
      - app-network_0

  backend_server_0:
    build:
      context: ./
      dockerfile: Dockerfile.ngin
    restart: unless-stopped
    container_name: backend_server_container_0
    working_dir: /var/www
    ports:
      - "801:80"
      - "4431:443"
    environment:
      SERVICE_TAGS: dev_nginx_0
      SERVICE_NAME: nginx_0
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - php_runtime_0
    networks:
      - app-network_0

  php_runtime_0:
    build:
      context: ./
      dockerfile: dockerfile.php
    restart: unless-stopped
    container_name: php_runtime_container_0
    working_dir: /var/www
    depends_on:
      - _db_0
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_HOST: ${DB_HOST}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev_runtime
      SERVICE_NAME: php_runtime_0
    ports:
      - 9000:9000
    volumes:
      - ./docker/php/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/php-fpm.d/:/usr/local/etc/php-fpm.d/
      - ./backend/:/var/www/
    tty: true
    networks:
      - app-network_0

  frontend_0:
    build:
      context: ./
      dockerfile: dockerfile.front
    restart: unless-stopped
    container_name: react-frontend-app_0
    tty: true
    ports:
      - 3000:3000
    volumes:
      - ./frontend/:/var/www/
    networks:
      - app-network_0

  redis_0:
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - 6379:6379

  mongodb_0:
    image: mongo:latest
    container_name: mongoDB_0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
      SERVICE_TAGS: dev_mongo_db_0
      SERVICE_NAME: mongo_db_0
    ports:
      - 27017:27017
    volumes:
      - ./data_mongo:/data/db
    networks:
      - app-network_0

volumes:
  data_mysql:
  data_mongo:

networks:
  app-network_0:
    driver: bridge
